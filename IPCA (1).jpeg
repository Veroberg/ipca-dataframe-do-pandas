{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd #Importando o Pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>data;\"valor\"</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>01/01/1995;\"1</th>\n",
       "      <td>66\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/02/1995;\"1</th>\n",
       "      <td>36\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/03/1995;\"1</th>\n",
       "      <td>51\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/04/1995;\"2</th>\n",
       "      <td>45\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/05/1995;\"2</th>\n",
       "      <td>44\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/06/1995;\"2</th>\n",
       "      <td>70\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/07/1995;\"2</th>\n",
       "      <td>62\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/08/1995;\"1</th>\n",
       "      <td>10\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/09/1995;\"1</th>\n",
       "      <td>03\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/10/1995;\"1</th>\n",
       "      <td>31\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/11/1995;\"1</th>\n",
       "      <td>13\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/12/1995;\"1</th>\n",
       "      <td>17\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/01/1996;\"1</th>\n",
       "      <td>21\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/02/1996;\"0</th>\n",
       "      <td>87\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/03/1996;\"0</th>\n",
       "      <td>45\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/04/1996;\"1</th>\n",
       "      <td>16\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/05/1996;\"0</th>\n",
       "      <td>96\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/06/1996;\"1</th>\n",
       "      <td>18\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/07/1996;\"1</th>\n",
       "      <td>11\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/08/1996;\"0</th>\n",
       "      <td>54\"</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              data;\"valor\"\n",
       "01/01/1995;\"1          66\"\n",
       "01/02/1995;\"1          36\"\n",
       "01/03/1995;\"1          51\"\n",
       "01/04/1995;\"2          45\"\n",
       "01/05/1995;\"2          44\"\n",
       "01/06/1995;\"2          70\"\n",
       "01/07/1995;\"2          62\"\n",
       "01/08/1995;\"1          10\"\n",
       "01/09/1995;\"1          03\"\n",
       "01/10/1995;\"1          31\"\n",
       "01/11/1995;\"1          13\"\n",
       "01/12/1995;\"1          17\"\n",
       "01/01/1996;\"1          21\"\n",
       "01/02/1996;\"0          87\"\n",
       "01/03/1996;\"0          45\"\n",
       "01/04/1996;\"1          16\"\n",
       "01/05/1996;\"0          96\"\n",
       "01/06/1996;\"1          18\"\n",
       "01/07/1996;\"1          11\"\n",
       "01/08/1996;\"0          54\""
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(\"http://api.bcb.gov.br/dados/serie/bcdata.sgs.16122/dados?formato=csv\") #IPCA do BC em CSV\n",
    "df.head(20) #Mostra as 20 primeiras linhas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['01/01/1995;\"1', '01/02/1995;\"1', '01/03/1995;\"1', '01/04/1995;\"2',\n",
       "       '01/05/1995;\"2', '01/06/1995;\"2', '01/07/1995;\"2', '01/08/1995;\"1',\n",
       "       '01/09/1995;\"1', '01/10/1995;\"1',\n",
       "       ...\n",
       "       '01/04/2020;\"-0', '01/05/2020;\"-0', '01/06/2020;\"0', '01/07/2020;\"0',\n",
       "       '01/08/2020;\"0', '01/09/2020;\"0', '01/10/2020;\"0', '01/11/2020;\"0',\n",
       "       '01/12/2020;\"0', '01/01/2021;\"0'],\n",
       "      dtype='object', length=313)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.index #Sequenciando cada linha do arquivo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['data;\"valor\"'], dtype='object')"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns #Apresentação do nomde das colunas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([['66\"'],\n",
       "       ['36\"'],\n",
       "       ['51\"'],\n",
       "       ['45\"'],\n",
       "       ['44\"'],\n",
       "       ['70\"'],\n",
       "       ['62\"'],\n",
       "       ['10\"'],\n",
       "       ['03\"'],\n",
       "       ['31\"'],\n",
       "       ['13\"'],\n",
       "       ['17\"'],\n",
       "       ['21\"'],\n",
       "       ['87\"'],\n",
       "       ['45\"'],\n",
       "       ['16\"'],\n",
       "       ['96\"'],\n",
       "       ['18\"'],\n",
       "       ['11\"'],\n",
       "       ['54\"'],\n",
       "       ['13\"'],\n",
       "       ['15\"'],\n",
       "       ['31\"'],\n",
       "       ['47\"'],\n",
       "       ['01\"'],\n",
       "       ['35\"'],\n",
       "       ['31\"'],\n",
       "       ['45\"'],\n",
       "       ['26\"'],\n",
       "       ['39\"'],\n",
       "       ['33\"'],\n",
       "       ['01\"'],\n",
       "       ['01\"'],\n",
       "       ['14\"'],\n",
       "       ['06\"'],\n",
       "       ['24\"'],\n",
       "       ['49\"'],\n",
       "       ['40\"'],\n",
       "       ['34\"'],\n",
       "       ['11\"'],\n",
       "       ['27\"'],\n",
       "       ['03\"'],\n",
       "       ['07\"'],\n",
       "       ['35\"'],\n",
       "       ['17\"'],\n",
       "       ['02\"'],\n",
       "       ['08\"'],\n",
       "       ['06\"'],\n",
       "       ['52\"'],\n",
       "       ['16\"'],\n",
       "       ['98\"'],\n",
       "       ['68\"'],\n",
       "       ['49\"'],\n",
       "       ['08\"'],\n",
       "       ['51\"'],\n",
       "       ['46\"'],\n",
       "       ['32\"'],\n",
       "       ['38\"'],\n",
       "       ['63\"'],\n",
       "       ['51\"'],\n",
       "       ['47\"'],\n",
       "       ['32\"'],\n",
       "       ['21\"'],\n",
       "       ['60\"'],\n",
       "       ['18\"'],\n",
       "       ['28\"'],\n",
       "       ['84\"'],\n",
       "       ['72\"'],\n",
       "       ['24\"'],\n",
       "       ['18\"'],\n",
       "       ['24\"'],\n",
       "       ['44\"'],\n",
       "       ['47\"'],\n",
       "       ['55\"'],\n",
       "       ['36\"'],\n",
       "       ['44\"'],\n",
       "       ['51\"'],\n",
       "       ['79\"'],\n",
       "       ['08\"'],\n",
       "       ['70\"'],\n",
       "       ['40\"'],\n",
       "       ['56\"'],\n",
       "       ['63\"'],\n",
       "       ['72\"'],\n",
       "       ['57\"'],\n",
       "       ['52\"'],\n",
       "       ['53\"'],\n",
       "       ['52\"'],\n",
       "       ['40\"'],\n",
       "       ['38\"'],\n",
       "       ['86\"'],\n",
       "       ['70\"'],\n",
       "       ['66\"'],\n",
       "       ['97\"'],\n",
       "       ['95\"'],\n",
       "       ['75\"'],\n",
       "       ['84\"'],\n",
       "       ['35\"'],\n",
       "       ['20\"'],\n",
       "       ['98\"'],\n",
       "       ['85\"'],\n",
       "       ['40\"'],\n",
       "       ['47\"'],\n",
       "       ['44\"'],\n",
       "       ['71\"'],\n",
       "       ['38\"'],\n",
       "       ['47\"'],\n",
       "       ['58\"'],\n",
       "       ['70\"'],\n",
       "       ['62\"'],\n",
       "       ['71\"'],\n",
       "       ['52\"'],\n",
       "       ['53\"'],\n",
       "       ['60\"'],\n",
       "       ['73\"'],\n",
       "       ['61\"'],\n",
       "       ['48\"'],\n",
       "       ['55\"'],\n",
       "       ['60\"'],\n",
       "       ['79\"'],\n",
       "       ['65\"'],\n",
       "       ['65\"'],\n",
       "       ['76\"'],\n",
       "       ['79\"'],\n",
       "       ['56\"'],\n",
       "       ['30\"'],\n",
       "       ['36\"'],\n",
       "       ['32\"'],\n",
       "       ['39\"'],\n",
       "       ['60\"'],\n",
       "       ['47\"'],\n",
       "       ['32\"'],\n",
       "       ['65\"'],\n",
       "       ['39\"'],\n",
       "       ['29\"'],\n",
       "       ['24\"'],\n",
       "       ['26\"'],\n",
       "       ['01\"'],\n",
       "       ['22\"'],\n",
       "       ['15\"'],\n",
       "       ['25\"'],\n",
       "       ['31\"'],\n",
       "       ['23\"'],\n",
       "       ['55\"'],\n",
       "       ['48\"'],\n",
       "       ['36\"'],\n",
       "       ['33\"'],\n",
       "       ['33\"'],\n",
       "       ['36\"'],\n",
       "       ['36\"'],\n",
       "       ['20\"'],\n",
       "       ['44\"'],\n",
       "       ['30\"'],\n",
       "       ['37\"'],\n",
       "       ['40\"'],\n",
       "       ['57\"'],\n",
       "       ['51\"'],\n",
       "       ['44\"'],\n",
       "       ['47\"'],\n",
       "       ['55\"'],\n",
       "       ['70\"'],\n",
       "       ['64\"'],\n",
       "       ['54\"'],\n",
       "       ['48\"'],\n",
       "       ['51\"'],\n",
       "       ['45\"'],\n",
       "       ['31\"'],\n",
       "       ['30\"'],\n",
       "       ['40\"'],\n",
       "       ['48\"'],\n",
       "       ['28\"'],\n",
       "       ['49\"'],\n",
       "       ['48\"'],\n",
       "       ['37\"'],\n",
       "       ['31\"'],\n",
       "       ['23\"'],\n",
       "       ['39\"'],\n",
       "       ['33\"'],\n",
       "       ['40\"'],\n",
       "       ['47\"'],\n",
       "       ['60\"'],\n",
       "       ['47\"'],\n",
       "       ['40\"'],\n",
       "       ['42\"'],\n",
       "       ['57\"'],\n",
       "       ['29\"'],\n",
       "       ['20\"'],\n",
       "       ['19\"'],\n",
       "       ['39\"'],\n",
       "       ['58\"'],\n",
       "       ['66\"'],\n",
       "       ['71\"'],\n",
       "       ['80\"'],\n",
       "       ['70\"'],\n",
       "       ['70\"'],\n",
       "       ['68\"'],\n",
       "       ['59\"'],\n",
       "       ['42\"'],\n",
       "       ['38\"'],\n",
       "       ['39\"'],\n",
       "       ['51\"'],\n",
       "       ['50\"'],\n",
       "       ['53\"'],\n",
       "       ['54\"'],\n",
       "       ['59\"'],\n",
       "       ['47\"'],\n",
       "       ['26\"'],\n",
       "       ['61\"'],\n",
       "       ['34\"'],\n",
       "       ['07\"'],\n",
       "       ['53\"'],\n",
       "       ['45\"'],\n",
       "       ['51\"'],\n",
       "       ['55\"'],\n",
       "       ['62\"'],\n",
       "       ['67\"'],\n",
       "       ['65\"'],\n",
       "       ['55\"'],\n",
       "       ['46\"'],\n",
       "       ['53\"'],\n",
       "       ['50\"'],\n",
       "       ['43\"'],\n",
       "       ['34\"'],\n",
       "       ['42\"'],\n",
       "       ['46\"'],\n",
       "       ['61\"'],\n",
       "       ['52\"'],\n",
       "       ['79\"'],\n",
       "       ['55\"'],\n",
       "       ['69\"'],\n",
       "       ['59\"'],\n",
       "       ['56\"'],\n",
       "       ['50\"'],\n",
       "       ['61\"'],\n",
       "       ['21\"'],\n",
       "       ['44\"'],\n",
       "       ['57\"'],\n",
       "       ['44\"'],\n",
       "       ['38\"'],\n",
       "       ['68\"'],\n",
       "       ['83\"'],\n",
       "       ['83\"'],\n",
       "       ['78\"'],\n",
       "       ['74\"'],\n",
       "       ['66\"'],\n",
       "       ['77\"'],\n",
       "       ['63\"'],\n",
       "       ['43\"'],\n",
       "       ['69\"'],\n",
       "       ['73\"'],\n",
       "       ['71\"'],\n",
       "       ['73\"'],\n",
       "       ['86\"'],\n",
       "       ['78\"'],\n",
       "       ['48\"'],\n",
       "       ['78\"'],\n",
       "       ['81\"'],\n",
       "       ['49\"'],\n",
       "       ['53\"'],\n",
       "       ['49\"'],\n",
       "       ['30\"'],\n",
       "       ['40\"'],\n",
       "       ['38\"'],\n",
       "       ['40\"'],\n",
       "       ['43\"'],\n",
       "       ['33\"'],\n",
       "       ['25\"'],\n",
       "       ['31\"'],\n",
       "       ['18\"'],\n",
       "       ['24\"'],\n",
       "       ['19\"'],\n",
       "       ['24\"'],\n",
       "       ['26\"'],\n",
       "       ['32\"'],\n",
       "       ['19\"'],\n",
       "       ['49\"'],\n",
       "       ['19\"'],\n",
       "       ['25\"'],\n",
       "       ['19\"'],\n",
       "       ['13\"'],\n",
       "       ['21\"'],\n",
       "       ['58\"'],\n",
       "       ['36\"'],\n",
       "       ['17\"'],\n",
       "       ['36\"'],\n",
       "       ['24\"'],\n",
       "       ['07\"'],\n",
       "       ['30\"'],\n",
       "       ['43\"'],\n",
       "       ['24\"'],\n",
       "       ['37\"'],\n",
       "       ['40\"'],\n",
       "       ['18\"'],\n",
       "       ['20\"'],\n",
       "       ['24\"'],\n",
       "       ['21\"'],\n",
       "       ['08\"'],\n",
       "       ['21\"'],\n",
       "       ['44\"'],\n",
       "       ['69\"'],\n",
       "       ['31\"'],\n",
       "       ['25\"'],\n",
       "       ['12\"'],\n",
       "       ['06\"'],\n",
       "       ['06\"'],\n",
       "       ['24\"'],\n",
       "       ['17\"'],\n",
       "       ['18\"'],\n",
       "       ['21\"'],\n",
       "       ['50\"'],\n",
       "       ['55\"'],\n",
       "       ['66\"'],\n",
       "       ['48\"']], dtype=object)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.values #Array numpy = valores que estão presente no Dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>data;\"valor\"</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>01/01/1995;\"1</th>\n",
       "      <td>66\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/02/1995;\"1</th>\n",
       "      <td>36\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/03/1995;\"1</th>\n",
       "      <td>51\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/04/1995;\"2</th>\n",
       "      <td>45\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/05/1995;\"2</th>\n",
       "      <td>44\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/09/2020;\"0</th>\n",
       "      <td>21\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/10/2020;\"0</th>\n",
       "      <td>50\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/11/2020;\"0</th>\n",
       "      <td>55\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/12/2020;\"0</th>\n",
       "      <td>66\"</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/01/2021;\"0</th>\n",
       "      <td>48\"</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>313 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              data;\"valor\"\n",
       "01/01/1995;\"1          66\"\n",
       "01/02/1995;\"1          36\"\n",
       "01/03/1995;\"1          51\"\n",
       "01/04/1995;\"2          45\"\n",
       "01/05/1995;\"2          44\"\n",
       "...                    ...\n",
       "01/09/2020;\"0          21\"\n",
       "01/10/2020;\"0          50\"\n",
       "01/11/2020;\"0          55\"\n",
       "01/12/2020;\"0          66\"\n",
       "01/01/2021;\"0          48\"\n",
       "\n",
       "[313 rows x 1 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.select_dtypes(include=['object']) #Filtro dos dados tipo object"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>01/01/1995;\"1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/02/1995;\"1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/03/1995;\"1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/04/1995;\"2</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/05/1995;\"2</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/09/2020;\"0</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/10/2020;\"0</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/11/2020;\"0</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/12/2020;\"0</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/01/2021;\"0</th>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>313 rows × 0 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: []\n",
       "Index: [01/01/1995;\"1, 01/02/1995;\"1, 01/03/1995;\"1, 01/04/1995;\"2, 01/05/1995;\"2, 01/06/1995;\"2, 01/07/1995;\"2, 01/08/1995;\"1, 01/09/1995;\"1, 01/10/1995;\"1, 01/11/1995;\"1, 01/12/1995;\"1, 01/01/1996;\"1, 01/02/1996;\"0, 01/03/1996;\"0, 01/04/1996;\"1, 01/05/1996;\"0, 01/06/1996;\"1, 01/07/1996;\"1, 01/08/1996;\"0, 01/09/1996;\"0, 01/10/1996;\"0, 01/11/1996;\"0, 01/12/1996;\"0, 01/01/1997;\"1, 01/02/1997;\"0, 01/03/1997;\"0, 01/04/1997;\"0, 01/05/1997;\"0, 01/06/1997;\"0, 01/07/1997;\"0, 01/08/1997;\"-0, 01/09/1997;\"0, 01/10/1997;\"0, 01/11/1997;\"0, 01/12/1997;\"0, 01/01/1998;\"0, 01/02/1998;\"0, 01/03/1998;\"0, 01/04/1998;\"0, 01/05/1998;\"0, 01/06/1998;\"0, 01/07/1998;\"0, 01/08/1998;\"-0, 01/09/1998;\"-0, 01/10/1998;\"-0, 01/11/1998;\"-0, 01/12/1998;\"0, 01/01/1999;\"0, 01/02/1999;\"1, 01/03/1999;\"0, 01/04/1999;\"0, 01/05/1999;\"0, 01/06/1999;\"0, 01/07/1999;\"0, 01/08/1999;\"0, 01/09/1999;\"0, 01/10/1999;\"1, 01/11/1999;\"0, 01/12/1999;\"0, 01/01/2000;\"0, 01/02/2000;\"0, 01/03/2000;\"0, 01/04/2000;\"0, 01/05/2000;\"0, 01/06/2000;\"0, 01/07/2000;\"0, 01/08/2000;\"0, 01/09/2000;\"0, 01/10/2000;\"0, 01/11/2000;\"0, 01/12/2000;\"0, 01/01/2001;\"0, 01/02/2001;\"0, 01/03/2001;\"0, 01/04/2001;\"0, 01/05/2001;\"0, 01/06/2001;\"0, 01/07/2001;\"1, 01/08/2001;\"0, 01/09/2001;\"0, 01/10/2001;\"0, 01/11/2001;\"0, 01/12/2001;\"0, 01/01/2002;\"0, 01/02/2002;\"0, 01/03/2002;\"0, 01/04/2002;\"0, 01/05/2002;\"0, 01/06/2002;\"0, 01/07/2002;\"0, 01/08/2002;\"0, 01/09/2002;\"0, 01/10/2002;\"0, 01/11/2002;\"1, 01/12/2002;\"1, 01/01/2003;\"1, 01/02/2003;\"1, 01/03/2003;\"1, 01/04/2003;\"0, ...]\n",
       "\n",
       "[313 rows x 0 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.select_dtypes(include=['float']) #Filtro dos dados tipo float"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "\"None of ['valor'] are in the columns\"",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-49-b5b92554a695>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mdf\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mset_index\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'valor'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0minplace\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mTrue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      2\u001b[0m \u001b[0mdf\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m20\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mC:\\ProgramData\\Anaconda32\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36mset_index\u001b[1;34m(self, keys, drop, append, inplace, verify_integrity)\u001b[0m\n\u001b[0;32m   4549\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   4550\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mmissing\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 4551\u001b[1;33m             \u001b[1;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34mf\"None of {missing} are in the columns\"\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   4552\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   4553\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: \"None of ['valor'] are in the columns\""
     ]
    }
   ],
   "source": [
    "df.set_index('valor', inplace=True)\n",
    "df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
